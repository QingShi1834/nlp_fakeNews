# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

image: alpine:latest

stages:          # List of stages for jobs, and their order of execution
  - build
  - package
  - deploy

before_script:
  - echo "Installing sshpass..."
  - apk add --no-cache openssh sshpass

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  script:
    - echo "Building custom Docker image with sshpass..."

transfer-job:    # This job runs in the package stage.
  stage: package  # It can run at the same time as package-job (in parallel).
  script:
    - apk add --no-cache openssh sshpass
    - echo "Transferring the package to the target server..."
    - sshpass -p "${SERVER_PSWD}" ssh -o StrictHostKeyChecking=no ${SERVER_IP} "mkdir -p ~/nlp_fakeNews"
    - sshpass -p "${SERVER_PSWD}" scp -o StrictHostKeyChecking=no -r * ${SERVER_IP}:~/nlp_fakeNews  # 使用群组继承的 SERVER_IP 变量
    - echo "Package transferred successfully."

deploy-job:      # This job runs in the deploy stage.
  stage: deploy   # It only runs when *both* jobs in the package stage complete successfully.
  script:
    - echo "Deploying application on the target server..."
    - sshpass -p "${SERVER_PSWD}" ssh -o StrictHostKeyChecking=no ${SERVER_IP} "cd ~/nlp_fakeNews && python3 -m venv venv && source venv/bin/activate && pip3 install -r requirements.txt"  # 使用群组继承的 SERVER_IP 和 SERVER_PSWD 变量
    - echo "Application deployed and executed successfully."